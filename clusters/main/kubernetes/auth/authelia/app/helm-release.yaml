---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authelia
  namespace: authelia
spec:
  interval: 15m
  chart:
    spec:
      chart: authelia
      version: 29.7.0
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 5m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    credentials:
      minio:
        accessKey: ${MINIO_ACCESSKEY}
        bucket: ${MINIO_BUCKET}
        encrKey: ${MINIO_ENCRKEY}
        secretKey: ${MINIO_SECRETKEY}
        type: s3
        url: ${MINIO_URL}
    ingress:
        main:
          enabled: true
          ingressClassName: external
          integrations:
            certManager:
              enabled: true
              certificateIssuer: domain-0-le-prod
          hosts:
            - host: auth.${DOMAIN_0}
              paths:
                - path: /
                  pathType: Prefix
    cnpg:
      main:
        mode: standalone
        cluster:
          singleNode: true
        backups:
          enabled: true
          credentials: minio
          revision: "2"
        recovery:
          credentials: minio
          revision: "1"
    persistence:
      config:
        volsync:
          - name: config
            type: restic
            credentials: minio
            dest:
              enabled: true
            src:
              enabled: true
              trigger:
                schedule: 10 0 * * *
    workload:
      main:
        replicas: 1
        podSpec:
          containers:
            main:
              env:
                X_AUTHELIA_CONFIG_FILTERS: template
    authelia:
      theme: auto
      totp:
        issuer: ${DOMAIN_0}
      authentication_backend:
        ldap:
          address: ldap://lldap-ldap.lldap.svc.cluster.local:3890
          tls:
            server_name: lldap.${DOMAIN_1}
          base_dn: DC=${DN},DC=${DC}
          attributes:
            username: uid
          additional_users_dn: ou=people
          users_filter: (&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))
          additional_groups_dn: ou=groups
          groups_filter: (member={dn})
          user: uid=admin,ou=people,dc=${DN},dc=${DC}
          password: ${LLDAP_PASSWORD}
      access_control:
        rules:
        - domain:
            - ${DOMAIN_0}
            - '*.${DOMAIN_0}'
          policy: two_factor
          subject:
            - 'group:admin'
      session:
        cookies:
          - domain: '${DOMAIN_0}'
            authelia_url: 'https://auth.${DOMAIN_0}'
          #  default_redirection_url: 'https://www.${DOMAIN_0}'
      notifier:
        smtp:
          address: submission://smtp.gmail.com:587
          username: ${SMTP_USER}
          password: ${SMTP_PASSWORD_AUTHELIA}
          sender: no-reply@${DOMAIN_0}
          tls:
            server_name: smtp.gmail.com
            minimum_version: TLS1.2
            skip_verify: false
      identity_providers:
        oidc:
          hmac_secret: ${OIDC_HMAC_KEY}
          jwks:
            - key: |
                {{- fileContent "/config/jwks/rsa.2048.cert" | nindent 8 }}
          clients:
            - client_id: 'mealie'
              client_name: 'Mealie'
              client_secret: ${OIDC_MEALIE_SECRET}
              public: false
              authorization_policy: 'two_factor'
              require_pkce: true
              pkce_challenge_method: 'S256'
              redirect_uris:
                - 'https://food.${DOMAIN_0}/login'
              scopes:
                - 'openid'
                - 'email'
                - 'profile'
                - 'groups'
              userinfo_signed_response_alg: 'none'
              consent_mode: 'implicit'
            - client_id: 'komga'
              client_name: 'Komga'
              client_secret: ${OIDC_KOMGA_SECRET}
              public: false
              authorization_policy: 'two_factor'
              redirect_uris:
                - 'https://komga.${DOMAIN_0}/login/oauth2/code/authelia'
              scopes:
                - 'openid'
                - 'profile'
                - 'email'
              grant_types:
                - 'authorization_code'
              userinfo_signed_response_alg: 'none'
              consent_mode: 'implicit'
            - client_id: 'upsnap'
              client_name: 'upsnap'
              client_secret: ${OIDC_UPSNAP_SECRET}
              public: false
              authorization_policy: 'two_factor'
              require_pkce: true
              pkce_challenge_method: S256
              redirect_uris:
                - https://up.${DOMAIN_0}/api/oauth2-redirect
              scopes:
                - 'openid'
                - 'profile'
                - 'email'
              userinfo_signed_response_alg: 'none'
              consent_mode: 'implicit'
            - client_id: 'actual-budget'
              client_name: 'Actual Budget'
              client_secret: ${OIDC_ACTUAL_SECRET}
              public: false
              authorization_policy: 'two_factor'
              redirect_uris:
                - 'https://actual.${DOMAIN_0}/openid/callback'
              scopes:
                - 'openid'
                - 'profile'
                - 'groups'
                - 'email'
              userinfo_signed_response_alg: 'none'
              token_endpoint_auth_method: 'client_secret_basic'
              consent_mode: 'implicit'
            - client_id: 'minio'
              client_name: 'MinIO'
              client_secret: ${OIDC_MINIO_SECRET}
              public: false
              authorization_policy: 'two_factor'
              redirect_uris:
                - 'https://minio.${DOMAIN_0}/oauth_callback'
              scopes:
                - 'openid'
                - 'profile'
                - 'email'
                - 'groups'
              userinfo_signed_response_alg: 'none'
              consent_mode: 'implicit'
            - client_id: 'grafana'
              client_name: 'Grafana'
              client_secret: ${OIDC_GRAFANA_SECRET}
              public: false
              authorization_policy: 'two_factor'
              require_pkce: true
              pkce_challenge_method: 'S256'
              redirect_uris:
                - 'https://grafana.${DOMAIN_0}/login/generic_oauth'
              scopes:
                - 'openid'
                - 'profile'
                - 'groups'
                - 'email'
              userinfo_signed_response_alg: 'none'
              token_endpoint_auth_method: 'client_secret_basic'
              consent_mode: 'implicit'
            - client_id: 'home-assistant'
              client_name: 'Home Assistant'
              client_secret: ${OIDC_HA_SECRET}
              public: false
              require_pkce: true
              pkce_challenge_method: 'S256'
              authorization_policy: 'two_factor'
              redirect_uris:
                - 'https://ha.${DOMAIN_0}/auth/oidc/callback'
              scopes:
                - 'openid'
                - 'profile'
                - 'groups'
              userinfo_signed_response_alg: 'none'
              token_endpoint_auth_method: 'client_secret_post'
              consent_mode: 'implicit'